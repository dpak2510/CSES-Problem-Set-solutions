#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

ll n, a, b;
vector<ll> tree[200010], sol(200010);

void dfs(int src, int par, int lvl, ll &mx, ll &far)
{
    if(lvl > mx)
        mx = lvl, far = src;
    for(auto u: tree[src])
        if(u!=par)
            dfs(u, src, lvl+1, mx, far);
}

void fun(int src, int par, ll lvl)
{
    sol[src] = max(sol[src], lvl);
    for(auto u: tree[src])
        if(u!=par)
            fun(u, src, lvl+1);
}

int main() 
{
    cin>>n;
    for(int i=0;i<n-1;i++)
        cin>>a>>b, tree[a].push_back(b), tree[b].push_back(a);
    ll n1=0, n2=0, mx=0;
    dfs(1, 0, 1, mx, n1);
    mx=0;
    dfs(n1, 0, 1, mx, n2);
    fun(n1, 0, 1);
    fun(n2, 0, 1);
    for(int i=1;i<=n;i++)
        cout<<sol[i]-1<<" ";
    cout<<"\n";
	return 0;
}